{
	"version": "2.0.0",
	"tasks": [
		////////////// Compile ///////////////////////////////////
		{
			// we also tried "cppbuild". POS: no 1 second delay. NEG: more verbose, no color output, less reliable matched (ctrl-click often failed)
			"type": "shell",
			"label": "Single file: compile",
			"command": "gcc",
			"args": [
				"-g",
				"-Werror",
				"-Wall",
				"${fileBasename}",
				"-lm",
				"-o",
				"${fileBasenameNoExtension}"
			],
			"options": {
				"cwd": "${fileDirname}"
			},
			"presentation": {
				"clear": true,
				"showReuseMessage": false
			},
			"problemMatcher": [
				"$gcc"
			],
			"group": "build"
		},
		{
			"type": "shell",
			"label": "All files in directory: compile",
			"command": "gcc",
			"args": [
				"-g",
				"-Werror",
				"-Wall",
				"*.c",
				"-lm",
				"-o",
				"${config:c_project.program}"
			],
			"options": {
				"cwd": "${fileDirname}"
			},
			"presentation": {
				"clear": true,
				"showReuseMessage": false
			},
			"problemMatcher": [
				"$gcc"
			],
			"group": "build"
		},
		{
			"type": "shell",
			"label": "Make: compile",
			"command": "make",
			"args": [
				"${config:c_project.program}"
			],
			"options": {
				"cwd": "${workspaceFolder}/${config:c_project.dir}"
			},
			"presentation": {
				"clear": true,
				"showReuseMessage": false
			},
			"problemMatcher": {
				"base": "$gcc",
				"fileLocation": [
					"relative",
					"${workspaceFolder}/${config:c_project.dir}"
				]
			},
			"group": "build"
		},

		////////////// Compile and run ///////////////////////////////////
		{
			"type": "shell", // less verbose
			"label": "Single file: compile and run",
			"command": "${workspaceFolder}/.vscode/run.sh",
			"args": [],
			"options": {
				"cwd": "${fileDirname}", // important for line-matching in error messages
				"env": {
					"CODE_RUN": "./${fileBasenameNoExtension} ${config:c_project.args}",
				},
				"shell": {
					"executable": "bash",
				}
			},
			"presentation": {
				"echo": false,
			},
			"problemMatcher": [],
			"dependsOn": "Single file: compile",
			"group": "build"
		},
		{
			"type": "shell",
			"label": "All files in directory: compile and run",
			"command": "${workspaceFolder}/.vscode/run.sh",
			"args": [],
			"options": {
				"cwd": "${fileDirname}", // important for line-matching in error messages
				"env": {
					"CODE_RUN": "./${config:c_project.program} ${config:c_project.args}",
				},
				"shell": {
					"executable": "bash",
				}
			},
			"presentation": {
				"echo": false,
			},
			"problemMatcher": [],
			"dependsOn": "All files in directory: compile",
			"group": "build"
		},
		{
			"type": "shell",
			"label": "Make: compile and run",
			"command": "${workspaceFolder}/.vscode/run.sh",
			"args": [],
			"options": {
				"cwd": "${workspaceFolder}/${config:c_project.dir}", // important for line-matching in error messages
				"env": {
					"CODE_RUN": "./${config:c_project.program} ${config:c_project.args}",
				},
				"shell": {
					"executable": "bash",
				}
			},
			"presentation": {
				"echo": false,
			},
			"problemMatcher": [],
			"dependsOn": "Make: compile",
			"group": {
				"kind": "build",
				"isDefault": true
			}
		},


		////////////// Compile and run with valgrind ///////////////////////////////////
		{
			"type": "shell",
			"label": "Single file: compile and run with valgrind",
			"command": "${workspaceFolder}/.vscode/run.sh",
			"args": [],
			"options": {
				"cwd": "${fileDirname}", // important for line-matching in error messages
				"env": {
					"CODE_RUN": "valgrind --error-exitcode=1 --leak-check=full --show-leak-kinds=all ./${fileBasenameNoExtension} ${config:c_project.args}",
				},
				"shell": {
					"executable": "bash",
				}
			},
			"presentation": {
				"echo": false,
			},
			"problemMatcher": [],
			"dependsOn": "Single file: compile",
			"group": "build"
		},
		{
			"type": "shell",
			"label": "All files in directory: compile and run with valgrind",
			"command": "${workspaceFolder}/.vscode/run.sh",
			"args": [],
			"options": {
				"cwd": "${fileDirname}", // important for line-matching in error messages
				"env": {
					"CODE_RUN": "valgrind --error-exitcode=1 --leak-check=full --show-leak-kinds=all ./${config:c_project.program} ${config:c_project.args}",
				},
				"shell": {
					"executable": "bash",
				}
			},
			"presentation": {
				"echo": false,
			},
			"problemMatcher": [],
			"dependsOn": "All files in directory: compile",
			"group": "build"
		},
		{
			"type": "shell",
			"label": "Make: compile and run with valgrind",
			"command": "${workspaceFolder}/.vscode/run.sh",
			"args": [],
			"options": {
				"cwd": "${workspaceFolder}/${config:c_project.dir}", // important for line-matching in error messages
				"env": {
					"CODE_RUN": "valgrind --error-exitcode=1 --leak-check=full --show-leak-kinds=all ./${config:c_project.program} ${config:c_project.args}",
				},
				"shell": {
					"executable": "bash",
				}
			},
			"presentation": {
				"echo": false,
			},
			"problemMatcher": [],
			"dependsOn": "Make: compile",
			"group": "build"
		},

		////////////// Set args ///////////////////////////////////
		{
			"type": "cppbuild", // no 1 second delay
			"label": "Set program arguments",
			"command": "code",
			"args": [
				"${workspaceFolder}/.vscode/settings.json"
			],
			"presentation": {
				"echo": false,
				"reveal": "never"
			},
			"problemMatcher": [],
			"group": "build"
		},

		////////////// For the debugger (see launch.json) ///////////////////////////////////
		{
			"label": "debug-single-file",
			"hide": true,
			"dependsOrder": "sequence",
			"dependsOn": ["Single file: compile", "Setup debugger"]
		},
		{
			"label": "debug-all-files",
			"hide": true,
			"dependsOrder": "sequence",
			"dependsOn": ["All files in directory: compile", "Setup debugger"]
		},
		{
			"label": "debug-make",
			"hide": true,
			"dependsOrder": "sequence",
			"dependsOn": ["Make: compile", "Setup debugger"]
		},
		{
			"type": "cppbuild", // no 1 second delay
			"label": "Setup debugger",
			"hide": true,
			"command": "./setup-debugger.sh",
			"args": [],
			"options": {
				"cwd": "${workspaceFolder}/.vscode",
				"shell": {
					"executable": "bash",
				}
			},
			"presentation": {
				"echo": false,
				"reveal": "never"
			},
			"problemMatcher": [],
			"group": "build"
		}
	],
}